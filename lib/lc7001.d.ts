import { EventEmitter } from 'events';
import { TcpSocketConnectOpts } from 'net';
import { PlatformLC7001 } from './platform';
export declare class LC7001 {
    readonly platform: PlatformLC7001;
    accessories: any[];
    isInitialized: boolean;
    emitter: EventEmitter;
    private interface;
    private readonly tcpOptions;
    private _commandID;
    private passwordHash;
    private isAuthenticated;
    private readonly delimiter;
    private tcpBuffer;
    private readonly tcpRetrySeconds;
    private readonly tcpTimeout;
    private readonly tcpTimeoutSeconds;
    private commandQueue;
    private responseQueue;
    private addALight;
    private addASceneController;
    private authExempt;
    private configured;
    private connectionSequenceNumber;
    private daylightSavingtime;
    private effectiveTimeZone;
    private firmwareBranch;
    private firmwareDate;
    private firmwareVersion;
    private firstSystemTime;
    private firstTimeRecorded;
    private freeMemory;
    private freeMemLowWater;
    private free_Count;
    private houseID;
    private jsonConnections;
    private jsonErr;
    private location;
    private locationInfo;
    private mac;
    macAddress: any;
    private malloc_Count;
    private mobileAppData;
    private model;
    private otherRecvErr;
    private peakRamUsage;
    private qmotionTryFind;
    private shortMACAddress;
    private staticRamUsage;
    private supportsSceneFadeRate;
    private taskHeartbeatBitmask;
    private timeZone;
    private updateState;
    private zoneList;
    private lastDiagTime;
    private lastMemTime;
    private lastNTPTime;
    private lastPingSeq;
    private lastPingTime;
    private lastSysPropTime;
    constructor(platform: PlatformLC7001, password: string | undefined, tcpOptions: TcpSocketConnectOpts, delimiter?: string, tcpTimeoutSeconds?: number, tcpRetrySeconds?: number);
    private answerChallenge;
    private checkInitialized;
    private get commandID();
    private cmdGetAccessory;
    private cmdGetLC7001Properties;
    private cmdGetSystemInfo;
    private cmdListAccessories;
    private cmdSetAccessory;
    private connectLC7001;
    private isInitializedTest;
    private processBuffer;
    private processresponseQueue;
    private processLC7001Message;
    private queryLC7001Zones;
    private sendCMD;
    private sendCMDArray;
    setAccessory(id: number, PropertyList: any): void;
    scanAccessories(): void;
}
//# sourceMappingURL=lc7001.d.ts.map